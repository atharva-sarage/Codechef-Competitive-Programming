/*
	AUTHOR-Atharva Sarage
		IIT HYDERABAD
		*/
#include<stdio.h>
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		char str[100005];
		int i,j,k,index;
		scanf("%s",str);
		int n=strlen(str);
		int count[26]={0};
		int count_1=0;
		for(i=0;i<n;i++)
		{
			count[str[i]-'a']++;
		}
		int flag=0;
		for(i=0;i<26;i++)
		{
			if(count[i]%2==1 && n%2==0)
				{
				printf("-1\n");
				flag=1;
				break;
			}
		
			if(count[i]%2==1)
				{
					if(count_1==0)
						index=i;
						
						count_1++;
				}
			
		}
		if(flag==1)
			continue;
		int  update;
		int count4=0;
		for(i=0;i<n;i++) // to find the middle index of the alphabet occurring odd times
		{
			if(str[i]-'a'==index && count4<(count[index]+1)/2 )
				{
					update=i;
					count4++;	
				}
		}
		if(count_1>1)
		{
			printf("-1\n");
			continue;
		}
		int final[100004];
		int t=0;
		k=0;
		for(j=0;j<26;j++)
		{
			int count_2=0,count_3=0;
			for(i=0;i<n;i++)
			{
				if((str[i]-'a')== j && count_2<count[j]/2)
				{
					final[t]=i;
					t++;
					count_2++;
				}			
				
			}
			for(i=n-1;i>=0;i--)
			{
				if((str[i]-'a')== j && count_3<count[j]/2)
				{
					final[n-1-k]=i;
					count_3++;
					k++;
				}	
			}
		}
		if(n%2==1)
			final[n/2]=update;
		for(i=0;i<n;i++)
		{
			printf("%d ",final[i]+1);
		}
		printf("\n");
	}
}
