    #include <bits/stdc++.h>     
    using namespace std;
    string s;
    int start,end;
    int n;
     
    int ans[100001];
    bool check[10];
     
    void bfs(vector<int> adj[])
    {
    	queue<int> q;
    	q.push(0);
    	while(!q.empty())
    	{
    		int i = q.front();    	
    		q.pop();    		
    		if(i-1 > 0 && !ans[i-1])
    		{
    			ans[i-1] = 1 + ans[i];
    			q.push(i-1);
    		}
            if(i+1 < n && !ans[i+1])
            {
                ans[i+1] = 1 + ans[i];
                q.push(i+1);
            }
    		int val = s[i] -'0';
    		if(!check[val])
    		{
    			check[val] = true;
    			for(int j=0;j<adj[val].size();++j)
    			{
    				//cout<<"i j "<<i<<" "<<j<<endl;
    				int idx = adj[val][j];
    				if(!ans[idx] && idx!=0 && idx!=i)
    				{
    					ans[idx] = 1 + ans[i];
    					q.push(idx);
    				}
    			}
    		}
    	}
    }
     
    int main()
    {
    	cin>>s;
    	n = s.size();
    	vector<int> adj[10];
    	for(int i=0;i<10;++i)
    		check[i] = false;
    	for(int i=0;i<n;++i)
    	{
    		adj[s[i]-'0'].push_back(i);
    		ans[i] = 0;
    	}
    	bfs(adj);
    	cout<<ans[n-1]<<endl;
    	return 0;
    } 