    #include<stdio.h>
     
    unsigned long long int needed(unsigned long long mid,int long long n,int long long h[],int long long r[],unsigned long long int L)
    {
    	int long long i;
    	unsigned long long int sum=0,y;
    	for(i=0;i<n;i++)
    	{
    		y=mid*r[i];
    		
    			if((h[i]+y)>=L)
    			{
    			
    				sum=sum+h[i]+r[i]*mid;
    			}
    	}
    	return sum;
    }
    unsigned long long int binary_search(int long long n,int long long h[],int long long r[],unsigned long long int L,unsigned long long int W )
    {
    	unsigned long long int high=1000000000000000000;
    	unsigned long long int low=0;
    	unsigned long long int mid;
    	int long long i;
    	unsigned long long int sum__1=0;
     
    for(i=0;i<n;i++)
    {
    	if(h[i]>=L)
    {	
    	sum__1=sum__1+h[i];
    }
    }
     
    if(sum__1>=W)
    {
    	return 0;
    }
    else
    {
    	while(high>=low)
    	{
    		mid=low+(high-low)/2 ;
    		
    		if(needed(mid,n,h,r,L)==W)
    		{	
    		break;
    		}
    		else if(needed(mid,n,h,r,L)>W)
    		high=mid-1;
    		else
    		low=mid+1;
    	}
    	return low;
    }
    }
     
    int main()
    {
    	int long long n,i;
    	unsigned long long int w,L,l;
    	scanf("%lld %llu %llu",&n,&w,&L);
    	int long long h[100001];
    	int long long r[100001];
    	for(i=0;i<n;i++)
    	{
    		scanf("%llu %llu",&h[i],&r[i]);
    	}
    	
     
    	l=binary_search(n,h,r,L,w);
    	
    	printf("%lld\n",l);
    	
    	
    }  