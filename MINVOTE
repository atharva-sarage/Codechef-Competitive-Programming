    #include<bits/stdc++.h>
    using namespace std;
    int long prefix[100010];
    int long suffix[100010];
    int ans[100005];
    int main()
    {
    	int t;
    	scanf("%d",&t);
    	while(t--)
    	{
    		// initialise to 0
    		
    		int i,j,k,n;
    		scanf("%d",&n);
            int long a[100005];
    		for(i=0;i<n;i++)
            {
                scanf("%ld",&a[i]);
            }
            if(n==1)
            {
                printf("0\n");
                continue;
            }
    		for(i=0;i<100005;i++)
    		{
    			prefix[i]=0;
    			suffix[i]=0;
                ans[i]=0;
    		}
    		
    		
    		ans[0]=1;
    		ans[n-1]=1;
    		for(i=1;i<n-1;i++)
    			ans[i]=2;
    			

    		prefix[0]=a[0];
    		for(i=1;i<n;i++)
    		{
    			prefix[i]=prefix[i-1]+a[i];
    		}
    		suffix[0]=a[n-1];
    		for(i=1;i<n;i++)
    		{
    			suffix[i]=suffix[i-1]+a[n-i-1];
    		}
    		int l1,l2;
    		for(i=0;i<n-2;i++)
    		{
    			l1=upper_bound(prefix+i+1,prefix+n,prefix[i]+a[i])-prefix;
    				//printf("%d**\n",l1);
    				
    			if(prefix[l1-1]<=prefix[i]+a[i])
    			{
    			
    					for(j=i+2;j<=l1 ;j++)
    					{
    						//printf("#");
                            if(j<n)
    						ans[j]++;
    						//printf("%d %d\n",i,j)	;
    					}
    			}
    	//	printf("\n");
    		}
    		/*for(i=0;i<n;i++)
    		{
    			printf("%d ",suffix[i]);
    		}*/
    	
    		for(j=n-1;j>1;j--)
    		{
    		
    			l2=upper_bound(suffix+n-j,suffix+n,suffix[n-j-1]+a[j])-suffix;
    				
    			if(suffix[l2-1]<=suffix[n-j-1]+a[j])
    			{
    				/*int count=0;
    				//printf("%d\n",j);
    					while(count<l2-(n-j))
    					{
    						if(j-2-count>=0 && j-2-count<n)
                            {
                                ans[j-2-count]++;
                                 
                            }
                            count++;
    					}*/
                    //printf("l2 is %d j is %d\n",l2,j);
    			for(k=j-2;k>=n-l2-1;k--)
                    {
                        if(k>=0)
                            ans[k]++;
                    }
    		}
        }
    		for(i=0;i<n;i++)
    		{
    			printf("%d ",ans[i]);
    		}
    		printf("\n");
    		
    		
    	}
    } 
