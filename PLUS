#include<bits/stdc++.h>
using namespace std;
int grid[1005][1005][5];
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		memset(grid,0,sizeof(grid));
		int row,col;
		int j,i;
		int long long ans=LLONG_MIN;
		cin>>row>>col;
		for(int i=0;i<row;i++)
			for(int j=0;j<col;j++)
				scanf("%d",&grid[i][j][0]);


		for(i=1;i<col-1;i++)
		{
			grid[0][i][1]=grid[0][i][0];
			for(j=1;j<row-1;j++)
			{
				grid[j][i][1]=max(grid[j-1][i][1]+grid[j][i][0],grid[j][i][0]);
			}
		}
		for(i=1;i<col-1;i++)
		{
			grid[row-1][i][2]=grid[row-1][i][0];
			for(j=row-2;j>0;j--)
			{
				grid[j][i][2]=max(grid[j+1][i][2]+grid[j][i][0],grid[j][i][0]);
			}
		}
		for(i=1;i<row-1;i++)
		{
			grid[i][0][3]=grid[i][0][0];
			for(j=1;j<col-1;j++)
			{
				grid[i][j][3]=max(grid[i][j-1][3]+grid[i][j][0],grid[i][j][0]);
			}
		}
		for(i=1;i<row-1;i++)
		{
			grid[i][col-1][4]=grid[i][col-1][0];
			for(j=col-2;j>0;j--)
			{
				grid[i][j][4]=max(grid[i][j+1][4]+grid[i][j][0],grid[i][j][0]);
			}
		}

		for(int i=1;i<row-1;i++)
			for(int j=1;j<col-1;j++)
			{
				if(grid[i-1][j][1]+grid[i+1][j][2]+grid[i][j-1][3]+grid[i][j+1][4]+grid[i][j][0] >ans)
					ans=grid[i-1][j][1]+grid[i+1][j][2]+grid[i][j-1][3]+grid[i][j+1][4]+grid[i][j][0];
			}

			printf("%lld\n",ans );

	}

}