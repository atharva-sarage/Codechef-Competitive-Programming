/*
	Author-Atharva Sarage
		IIT HYDERABAD
*/
#include<bits/stdc++.h>
using namespace std;
# define mx 105
vector <int> adj[mx];
int grid[4*mx][4*mx],maxl=0;
int parent[mx],level[mx],colour[mx],sub[mx],start[mx],visited[mx],flag=0;
void addedge(int u,int v)
{
	adj[u].push_back(v);
	adj[v].push_back(u);
}
int dfs(int u,int par)
{
	visited[u]=true;
	int temp=1;
	for(auto v:adj[u])
	{
		if(v==par)continue;
		if(visited[v]==true){flag=1;break;}
		level[v]=level[u]+1;
		maxl=max(maxl,level[v]);		
		temp+=dfs(v,u);
	}
	sub[u]=temp-1;
	return temp;
}
void print(int col,int start,int end,int l)
{
	//cout<<col<<endl;
	for(int i=start;i<=end;i++)
		grid[l][i]=col;
}
void solve()
{
	queue<int> q;
	q.push(1);
	int prev=1;
	while(!q.empty())
	{
		int x=q.front();
		q.pop();
		if(level[x]=prev+1)
			{prev++;}
		int c=start[x];		
		int col=colour[x];
		for(auto v:adj[x])
		{
			if(v==parent[x])continue;
			q.push(v);
			start[v]=c+1;
			colour[v]=1^col;
			parent[v]=x;
			print(col^1,c+1,c+2*sub[v]+1,level[v]);
			c+=2*sub[v]+2;
		}
	}
}
int main()
{
	memset(visited,false,sizeof(visited));
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++)
	{
		int x,y;
		cin>>x>>y;
		addedge(x,y);
	}
	dfs(1,-1);	
	for(int i=1;i<=n;i++)
	{
		if(!visited[i])flag=1;
	}
	if(flag==1)
	{
		cout<<-1<<endl;
		return 0;
	}
	level[1]=0;
	parent[1]=0;
	start[1]=0;
	colour[0]=0;
	for(int i=0;i<2*n-1;i++)
		grid[0][i]=0;
	for(int i=1;i<=maxl;i++)
	{
		for(int j=0;j<2*n-1;j++)
			grid[i][j]=2;		
	}
	solve();
	for(int i=1;i<=maxl;i++)
	{
		for(int j=0;j<2*n-1;j++)
		{
			if(grid[i][j]==2)
				grid[i][j]=grid[i-1][j];
		}
	}	
	cout<<maxl+1<<" "<<2*n-1<<endl;
	for(int i=0;i<=maxl;i++)
	{
		for(int j=0;j<2*n-1;j++)
			cout<<grid[i][j];
		printf("\n");
	}
}
