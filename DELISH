//max from left and min from right

#include<stdio.h>
#include<math.h>
int long long max(int long long a,int long long b)
{
	if(a>=b)
		return a;
	return b;
}
int long long min(int long long a,int long long b)
{
	if(a>=b)
		return b;
	return a;
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,i;
		scanf("%d",&n);
		int long long a[10001];
		for(i=0;i<n;i++)
		{
			scanf("%lld",&a[i]);
		}
		int long long maximum=0;
		int long long maxleft[10001]={0};
		int long long minright[10001]={0};
		int long long maxright[10001]={0};
		int long long minleft[10001]={0};

		for(i=0;i<n;i++)
		{
			if(i==0)
				{
					maxleft[i]=a[i];
					minleft[i]=a[i];
				}
			else
				{
					maxleft[i]=max(a[i],maxleft[i-1]+a[i]);
					minleft[i]=min(a[i],minleft[i-1]+a[i]);
				}
		}
		for(i=n-1;i>=0;i--)
		{
			if(i==n-1)
			{
				maxright[i]=a[n-1];
				minright[i]=a[n-1];
			}
			else
			{
				maxright[i]=max(a[i],maxright[i+1]+a[i]);
				minright[i]=min(a[i],minright[i+1]+a[i]);
			}
		}
		for(i=0;i<n-1;i++)
		{
			if(max((fabs(maxright[i+1]-minleft[i])),fabs(maxleft[i]-minright[i+1]))>maximum)

				maximum=max((fabs(maxright[i+1]-minleft[i])),fabs(maxleft[i]-minright[i+1]));
		}
		printf("%lld\n",maximum);
	}
}