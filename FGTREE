/******************************************
*    AUTHOR:         Atharva Sarage       *
*    INSTITUITION:   IIT HYDERABAD        *
******************************************/
#include<bits/stdc++.h>
#warning Check Max_Limit,Overflows
using namespace std;
# define IOS ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
# define ff first
# define ss second
# define pb push_back
# define mod 1000000007
# define ll long long 
# define db double
# define inf 1e9
# define mx2 100005
# define mx 100005
int par[mx],n,a[mx],b[mx],mx1=0;
int final=0;
int query(int x,int a1,int b1)
{
	if(x<1 || x>n || a1>n || a1<1|| b1>n || b1<1)
		return 0;
	final++;
	assert(final<=300);
	cout<<"Q"<<" "<<x<<" "<<a1<<" "<<b1<<endl;
	string str;
	cin>>str;
	if(str=="Yes")
		return 1;
	return 0;
}
int solve_single_left(int i,int p,int k);
void solve_start(int i,int k)
{
	//cout<<i<<" "<<k<<endl;
	if(i>n)return ;
	if(query(i,i,i))
	{
		b[i]=a[i]=i;
		mx1=max(mx1,i);
		//cout<<k<<" "<<a[k]<<" "<<b[i]<<"///"<<endl;
		if(query(k,a[k],b[i]))
			{
				par[i]=k;
				//printf("***\n");
			}
		else
		{
			par[i]=i+1;
			a[i+1]=a[i];			
			solve_single_left(i+2,i+1,k);	
			mx1=max(mx1,i);
			par[i+1]=mx1+1;
			a[mx1+1]=a[i];	
			solve_start(mx1+1,n+1);	

		}
	}
	else
	{
		a[i]=min(i,a[i]);
		solve_start(i+1,i); // after done with subtree go to parent
		//printf("888888 %d %d %d\n",i,k);
		b[i]=mx1;	
		//cout<<i+1<<" "<<i<<" "<<k<<" "<<a[k]<<" "<<b[i]<<endl;
		if(query(k,a[k],b[i]))
			{par[i]=k;b[k]=b[i];}
		else
		{
		// update
			mx1=max(mx1,i);
			par[i]=mx1+1;
			a[mx1+1]=a[i];
			//printf("7777 %d %d %d\n",mx1+1,i,a[i]);
			solve_start(mx1+1,n+1);		
		}
	}
}
int solve_single_left(int i,int p,int k)
{
	//cout<<i<<" "<<p<<" "<<k<<" "<<a[p]<<endl;
	if(query(i,a[p],i))
	{	
		//cout<<i<<" "<<p<<" "<<k<<" "<<a[p]<<endl;
		a[i]=a[p];b[i]=i;
		par[p]=i;
		//cout<<a[3]<<" "<<b[3]<<"???"<<" "<<i<<endl;
		solve_single_left(i+1,i,k);
	}
	else
	{
		//cout<<p<<" "<<k<<"#"<<endl;
		par[p]=k;	
		//printf("***%d %d\n",p+1,p);
		a[p+1]=a[p];
		solve_start(p+1,p);
		b[p]=max(p,mx1);
		mx1=b[p];
	}
}
int main()
{
	IOS;
	int t;
	cin>>t;
	while(t--)
	{
		memset(par,-1,sizeof(par));
		cin>>n;
		for(int i=1;i<=n;i++)
			{a[i]=inf;b[i]=0;}
		solve_start(1,n+1);
		for(int i=1;i<=n;i++)
		{
			if(par[i]==n+1)
				cout<<-1<<" ";
			else
				cout<<par[i]<<" ";
		}
		cout<<endl;
		// for(int i=1;i<=n;i++)
		// 	cout<<a[i]<<" "<<b[i]<<endl;
	}

}
