#include<bits/stdc++.h>
using namespace std;
int main()
{
	int t;
	cin>>t;
	for(int t1=1;t1<=t;t1++)
	{
		int n;
		cin>>n;
		int dp[n+1][2];
		memset(dp,-1,sizeof(dp));
		int f[n+1];
		int pre[n+1];
		pre[0]=0;
		for(int i=1;i<=n;i++)
		{
			double x;
			cin>>x;			
			pre[i]=pre[i-1]+(100-round(100*x)); // stores loosing probabilites
		}
		for(int i=1;i<=n;i++)
			cin>>f[i];
		double s1;
		cin>>s1;
		int s=round(100*s1);
		cout<<"Case "<<t1<<": ";
		
		if(pre[1]<s)
			dp[0][0]=f[1];		
		else
			dp[0][0]=-1;

		dp[1][0]=0;
		int c=1;
		for(int i=2;i<=n;i++)
		{
			for(int j=0;j<=i;j++) // no of battles lost by allies
			{
				int pp=max(0,pre[i]-j*100);					
				if((pp>=s*i))
				{
					dp[j][c]=-1;
					continue;
				}			
				if(j!=0 && dp[j-1][c^1]!=-1)// allies looses this battle
					dp[j][c]=dp[j-1][c^1];
				if(dp[j][c^1]!=-1) // allies win this battle
					dp[j][c]=max(dp[j][c],f[i]+dp[j][c^1]);				
			}			
			c=c^1;
		}
		int max1=0;
		for(int i=0;i<=n;i++)
			max1=max(max1,dp[i][c^1]);

		cout<<max1<<endl;
	}
}