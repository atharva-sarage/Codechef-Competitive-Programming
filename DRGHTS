#include<bits/stdc++.h>
using namespace std;
# define mx 500005
# define inf 500005
# define pb push_back
# define ff first
# define ss second
# define mp make_pair
int final=0,final1=0;
vector<int>adj[mx];
int n,m;
int visited[mx],sub[mx],size[mx],a[mx],parent[mx];
void addedge(int u,int v)
{
	adj[u].pb(v);
	adj[v].pb(u);
}
void dfs(int u,int par)
{
	visited[u]=true;
	size[u]=1;
	(a[u])?(sub[u]=1):(sub[u]=0);
	for(auto k:adj[u])
	{
		if(k==par)continue;
		parent[k]=u;
		dfs(k,u);		
		sub[u]+=sub[k];
		size[u]+=size[k];
	}
}
void DFS()
{
	for(int i=1;i<=n;i++)
	{
		if(visited[i])continue;
		dfs(i,-1);		
		if(sub[i]<2)
			{final+=size[i];continue;}
		final1+=(1LL*sub[i]*(sub[i]-1))/2;
		queue<pair<int,int> >q;
		q.push(mp(i,0));
		while(!q.empty())
		{
			int x=q.front().ff;
			int y=q.front().ss;
			int flag=-1;
			q.pop();
			int c=0;
			for(auto k:adj[x])
			{
				if(k==parent[x])continue;
				if(sub[k]>0)	
					c++;
			}
			if(a[x]==1)
				c=inf;
			for(auto k:adj[x])
			{
				if(k==parent[x])continue;	
				if(sub[k]==0)
					{final+=size[k];continue;}
				if(y==0 && c<2) 
					{q.push(mp(k,0));flag=1;}
				else if(y==0 && c>=2)
					q.push(mp(k,1));
				else if(y==1)
					q.push(mp(k,1));
			}	
			if(flag==1)		
				final++;
		}		
	}

}
int main()
{
	cin>>n>>m;
	vector<int> vec;
	for(int i=1;i<=n;i++)
	{	cin>>a[i];
		if(a[i])
			vec.pb(i);
	}
	for(int i=0;i<m;i++)
	{
		int x,y;
		cin>>x>>y;
		addedge(x,y);
	}
	DFS();	
	cout<<final1<<" "<<n-final<<endl;
}
