#include<bits/stdc++.h>
using namespace std;
vector<int> vec[25];
int dp[1<<23];
int calc[1<<23];
void calc1()
{
	for(int i=0;i<(1<<20);i++)
	{
		for(int j=0;j<20;j++)
		{
			if(i&(1<<j))
			{
				calc[i]+=vec[j].size();
			}
		}
	}
}
int cost(int l,int r,int j)
{
	int l1=lower_bound(vec[j].begin(),vec[j].end(),l)-vec[j].begin();
	int r1=upper_bound(vec[j].begin(),vec[j].end(),r)-vec[j].begin();
	return r1-l1;
}
int main()
{
	int n,m;
	scanf("%d %d",&n,&m);
	int a[n+5];
	for(int i=0;i<=(1<<m);i++)
		dp[i]=10000000;
	for(int i=0;i<n;i++)
		{scanf("%d",&a[i]);vec[a[i]-1].push_back(i);}
	calc1();
	int mx=1<<m;
	dp[0]=0;
	for(int i=0;i<mx;i++)
	{
		for(int j=0;j<m;j++)
		{
			if(i&(1<<j))continue;
			dp[i|(1<<j)]=min(dp[i|(1<<j)],dp[i]+(int)vec[j].size()-cost(calc[i],calc[i]+(int)vec[j].size()-1,j));
		}
	}
	cout<<dp[(1<<m)-1]<<endl;
}	