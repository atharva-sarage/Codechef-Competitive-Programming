#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int long lookup[100005][1025];
int v(char a)
{
	if(a=='+')
		return 1;
	else
		return 0;
}
int value(char str[])
{
	int i;
	int ans=0;
	int base=1;
	for(i=9;i>=0;i--)
		{
			ans=ans+base*(v(str[i]));
			base=base*2;
		}
	return ans;

}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int long M=1000000007;
		
		

		char str[11];
		scanf("%s",str);
		vector <char> value1;
		int i,j,n;
		for(i=0;i<strlen(str);i++)
		{
			if(str[i]=='w')
				value1.push_back('+');
			else
				value1.push_back('-');
		}
		
		int key=0;
		int base1=1;
		for(i=9;i>=0;i--)
		{
			if(value1[i]=='+')
				key=key+base1;

			base1=base1*2;
		}
		//printf("%d\n",key);
		scanf("%d",&n);
		vector <int> filter;
		for(i=0;i<n;i++)
		{
			char x[12];
			scanf("%s",x);
			filter.push_back(value(x));

		}
		/*for(i=0;i<n;i++)
		{
			printf("%d ",filter[i]);
		}*/
		/*for(i=0;i<n;i++)
			{
				int x;
				scanf("%d",&x);
				filter.push_back(x);
			}*/

		
		for(i=0;i<n;i++)
			for(j=0;j<1024;j++)
				lookup[i][j]=0;

		lookup[0][0]=1;
		lookup[0][filter[0]]++;
		for(i=1;i<n;i++)
		{
			
				
					for(j=0;j<1024;j++)
				lookup[i][j]=lookup[i-1][j];
			
			int flag[1025]={0};
			for(j=0;j<1024;j++)
			{
				if(lookup[i][j]>0)
					flag[j]=1;
			}
			for(j=0;j<1024;j++)
			{
				if(flag[j]==1)
					{
						lookup[i][j^filter[i]]=((lookup[i][j^filter[i]])+(lookup[i-1][j]));
						if(lookup[i][j^filter[i]]>M)
							lookup[i][j^filter[i]]=lookup[i][j^filter[i]]-M;
						//printf("%d**\n",lookup[i][j^filter[i]]);
			}	
				}
		}
			//lookup[i][filter[i]]++;

		
		/*for(i=0;i<n;i++)
		{
			for(j=0;j<17;j++)
			{
				printf("%d ",lookup[i][j]);
			}
			printf("\n");
		}*/
		printf("%ld\n",lookup[n-1][key]);




	}

}