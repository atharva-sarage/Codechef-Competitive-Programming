// Nice binary search

/*
	Author-Atharva Sarage
		IIT HYDERABD
	*/


#include<bits/stdc++.h>
using namespace std;
typedef double db;
typedef int long l;

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		vector<pair<double, double> > a(n);

			for (int i = 0; i < n; i++)
			{
      			cin >> a[i].first >> a[i].second;
    		}
          sort(a.begin(), a.end());
		db high=1e9;
		db low=0;
		db mid;
		int j=0;
		while(a[j].second>=a[j+1].second && j+1<n)
			j++;
		while(a[j].second<=a[j+1].second && j+1<n)
			j++;
		if(j==n-1)
		{
			printf("-1\n");
			continue;
		}
		while(high>=low)
		{

			int prev=1;
			mid=low+(high-low)/2;			
			//printf("%lf\n",mid);
			int kata=0;
			for(int i=1;i<n;i++)
			{
		
				int flag=0;
				if(prev==1 && a[i-1].second>=a[i].second )
					{
						
						prev=1;
						flag=1;
					}
				else if(prev==1 && (a[i].first-a[i-1].first)/(a[i].second-a[i-1].second)>=mid)
					{
						
						prev=1;
						flag=1;
					}
				else if(prev==1 && (a[i].first-a[i-1].first)/(a[i].second-a[i-1].second)<mid)
					{
						
						prev=0;
						flag=1;
					}

				else if(prev==0 && (a[i].first-a[i-1].first)/(a[i-1].second+a[i].second)>=mid)
					{
						
						prev=1;
						flag=1;
					}
				else if(prev==0 && a[i].second>=a[i-1].second)
				{
					prev=0;
					flag=1;
				}
				else if(prev==0 && (a[i].first-a[i-1].first)/(a[i-1].second-a[i].second)>=mid)
					{
						
						prev=0;
						flag=1;
					}

					if(flag==0)
					{
						kata=1;
						break;
					}

			}
			if(kata==1)
				high=mid-0.000001;
			else
				low=mid+0.000001;
		}
		printf("%.8lf\n",low );
	}
	
}	